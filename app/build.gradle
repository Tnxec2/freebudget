apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
        }
    }
    compileSdkVersion 26
    buildToolsVersion '28.0.3'
    def versionPropsFile = file('version.properties')
    def code = 1;
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        List<String> runTasks = gradle.startParameter.getTaskNames();
        def value = 0
        for (String item : runTasks)
            if (item.contains("assembleRelease")) {
                value = 1;
            }
        code = Integer.parseInt(versionProps['VERSION_CODE']).intValue() + value
        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    } else {
        throw new GradleException("Could not read version.properties!")
    }
    defaultConfig {
        applicationId "de.kontranik.freebudget"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode code
        versionName "1.0." + code
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        android.defaultConfig.vectorDrawables.useSupportLibrary true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // If you use each() to iterate through the variant objects,
            // you need to start using all(). That's because each() iterates
            // through only the objects that already exist during configuration timeâ€”
            // but those object don't exist at configuration time with the new model.
            // However, all() adapts to the new model by picking up object as they are
            // added during execution.
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "${applicationId}-${variant.name}-${variant.versionName}.apk"
                }
            }
        }
    }
}

dependencies {
    implementation 'com.android.support:support-v4:26.1.0'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:26.+'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.+'
    testCompile 'junit:junit:4.12'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.android.support:recyclerview-v7:26.+'
}
